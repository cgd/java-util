/*
 * Copyright (c) 2010 The Jackson Laboratory
 * 
 * This is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.jax.util.gui;

import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 * Pretty much the same as {@link WizardDialog} except that we're using
 * a {@link javax.swing.JFrame}
 * @author <A HREF="mailto:keith.sheppard@jax.org">Keith Sheppard</A>
 */
public class WizardFrame extends javax.swing.JFrame
{
    /**
     * every {@link java.io.Serializable} is supposed to have one of these
     */
    private static final long serialVersionUID = 1397647384021223058L;
    
    private final BroadcastingWizardController wizard;

    private final JPanel wizardView;

    private final WizardListener wizardListener = new WizardListener()
    {
        public void wizardCancelled(WizardController wizardController)
        {
            // don't care
        }

        public void wizardFinished(WizardController wizardController)
        {
            // don't care
        }

        public void wizardGoNextSucceeded(WizardController wizardController)
        {
            // don't care
        }

        public void wizardGoPreviousSucceeded(WizardController wizardController)
        {
            // don't care
        }

        public void wizardValidityChanged(WizardController wizardController)
        {
            WizardFrame.this.refreshWizardUI();
        }
    };
    
    /**
     * Constructor
     * @param wizard
     *          the wizard controller to use. the {@link #toString()} method of
     *          the controller is used to set the wizard frame's title
     * @param wizardView
     *          the wizard view to use.
     */
    public WizardFrame(
            BroadcastingWizardController wizard,
            JPanel wizardView)
    {
        this.wizard = wizard;
        this.wizardView = wizardView;
        
        this.initComponents();
        this.postGuiInit();
    }
    
    /**
     * do initialization after GUI builder finishes
     */
    private void postGuiInit()
    {
        this.backButton.setIcon(new ImageIcon(WizardDialog.class.getResource(
                "/images/action/back-16x16.png")));
        this.nextButton.setIcon(new ImageIcon(WizardDialog.class.getResource(
                "/images/action/forward-16x16.png")));
        this.helpButton.setIcon(new ImageIcon(WizardDialog.class.getResource(
                "/images/action/help-16x16.png")));
        this.pack();
        
        this.wizard.addWizardListener(this.wizardListener);
        
        this.refreshWizardUI();
    }
    
    /**
     * Ask the wizard which buttons to turn on/off
     */
    private void refreshWizardUI()
    {
        this.setTitle(this.wizard.toString());
        this.backButton.setEnabled(this.wizard.isPreviousValid());
        this.nextButton.setEnabled(this.wizard.isNextValid());
        this.finishButton.setEnabled(this.wizard.isFinishValid());
    }
    
    /**
     * Cancel the wizard
     */
    private void cancel()
    {
        if(this.wizard.cancel())
        {
            System.exit(0);
        }
    }
    
    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("all")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainContentsPanel = this.wizardView;
        actionPanel = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        finishButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        actionPanel.add(backButton);

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        actionPanel.add(nextButton);

        finishButton.setText("Finish");
        finishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishButtonActionPerformed(evt);
            }
        });
        actionPanel.add(finishButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        actionPanel.add(cancelButton);

        helpButton.setText("Help...");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });
        actionPanel.add(helpButton);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 435, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(0, 0, 0)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(mainContentsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                        .add(actionPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE))
                    .add(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(0, 0, 0)
                    .add(mainContentsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .add(actionPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 0, 0)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_backButtonActionPerformed
    {//GEN-HEADEREND:event_backButtonActionPerformed
        this.wizard.goPrevious();
        this.refreshWizardUI();
    }//GEN-LAST:event_backButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nextButtonActionPerformed
    {//GEN-HEADEREND:event_nextButtonActionPerformed
        this.wizard.goNext();
        this.refreshWizardUI();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void finishButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_finishButtonActionPerformed
    {//GEN-HEADEREND:event_finishButtonActionPerformed
        Thread finishThread = new Thread(new Runnable()
        {
            /**
             * {@inheritDoc}
             */
            public void run()
            {
                if(WizardFrame.this.wizard.finish())
                {
                    WizardFrame.this.dispose();
                    System.exit(0);
                }
                else
                {
                    WizardFrame.this.refreshWizardUI();
                }
            }
        });
        
        finishThread.start();
    }//GEN-LAST:event_finishButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        this.cancel();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_helpButtonActionPerformed
    {//GEN-HEADEREND:event_helpButtonActionPerformed
        this.wizard.help();
    }//GEN-LAST:event_helpButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        this.cancel();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionPanel;
    private javax.swing.JButton backButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton finishButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JPanel mainContentsPanel;
    private javax.swing.JButton nextButton;
    // End of variables declaration//GEN-END:variables

}
